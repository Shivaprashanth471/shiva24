on:
  push:
  
    branches:
      - master        # The default branch
      - branch-*    # The other branches to be analyzed
  # pull_request:
  #   types: [opened, synchronize, reopened]
jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      #   with:
      #     fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      # - name: SonarCloud Scan
      #   uses: SonarSource/sonarcloud-github-action@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: install dependencies
        run: yarn install
      # - name: test
      #   run: yarn build
      - name: deploy to server
        uses: AEnterprise/rsync-deploy@v1.0
        env:
          DEPLOY_KEY: ${{ secrets.ACL_PEM }}
          ARGS: "-e -c -r --delete"
          SERVER_PORT: 22
          FOLDER: ./target/acl-ui-dev1.war
          SERVER_IP: ${{ secrets.ACL_IP }}
          USERNAME: ec2-user
          SERVER_DESTINATION: /home/ec2-user      
      - name: Notify dedicated teams channel
        uses: jdcargile/ms-teams-notification@v1.3
        with:
          github-token: ${{ github.token }} # this will use the runner's token.
          # webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}
          ms-teams-webhook-uri: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
          notification-summary: deployed succesfully
          notification-color: 17a2b8
          timezone: Asia/Singapore
      # - name: Only if failure
      #   uses: actions/checkout@master
      - name: Microsoft Teams Notification
        uses: skitionek/notify-microsoft-teams@master
        if: failure()
        with:
          # github-token: ${{ github.token }}
          webhook_url: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
          overwrite: "{title: `Overwrote title in ${workflow_link}`}"  
          # notification-summary: deployment failed  
          # notification-color: 17a2b8
          # timezone: Asia/Singapore   
          # webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}
          needs: ${{ toJson(needs) }}
          job: ${{ toJson(job) }}
          steps: ${{ toJson(steps) }}
          dry_run: True            

  #     - name: Microsoft Teams Notification
  #       uses: skitionek/notify-microsoft-teams@master
  #       if: always()
  #       with:
  #         webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}
  #         needs: ${{ toJson(needs) }}
  #         job: ${{ toJson(job) }}
  #         steps: ${{ toJson(steps) }}
  #         dry_run: True


  # # without_optional_params:
  #    - name: One with little info
  #      runs-on: ubuntu-18.04
  #      steps:
  #       - uses: actions/checkout@master
  #       - name: Microsoft Teams Notification
  #         uses: skitionek/notify-microsoft-teams@master
  #         if: always()
  #         with:
  #           webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}

  #   # with_overwrite:
  #    - name: One with overwrite
  #      runs-on: ubuntu-18.04
  #      steps:
  #       - uses: actions/checkout@master
  #       - name: Microsoft Teams Notification
  #         uses: skitionek/notify-microsoft-teams@master
  #         if: always()
  #         with:
  #           webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}
  #           overwrite: "{title: `Overwrote title in ${workflow_link}`}"

  #   # with_raw:
  #    - name: One with raw data
  #      runs-on: ubuntu-18.04
  #      steps:
  #       - uses: actions/checkout@master
  #       - name: Microsoft Teams Notification
  #         uses: skitionek/notify-microsoft-teams@master
  #         if: always()
  #         with:
  #           webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}
  #           raw: >-
  #             {
  #               "@type": "MessageCard",
  #               "@context": "http://schema.org/extensions",
  #               "title": "No ${variables} avaliable in here"
  #             }

  #   # if_failure:
  #     name: Only if failure
  #     runs-on: ubuntu-18.04
  #     steps:
  #       - uses: actions/checkout@master
  #       - name: Microsoft Teams Notification
  #         uses: skitionek/notify-microsoft-teams@master
  #         if: failure()
  #         with:
  #           webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}
# jobs:
#   success:
#     name: One with everything
#     runs-on: ubuntu-18.04
#     steps:
#       - uses: actions/checkout@master
#       - name: Microsoft Teams Notification
#         uses: skitionek/notify-microsoft-teams@master
#         if: always()
#         with:
#           webhook_url: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
#           needs: ${{ toJson(needs) }}
#           job: ${{ toJson(job) }}
#           steps: ${{ toJson(steps) }}
#           dry_run: True


#   without_optional_params:
#     name: One with little info
#     runs-on: ubuntu-18.04
#     steps:
#       - uses: actions/checkout@master
#       - name: Microsoft Teams Notification
#         uses: skitionek/notify-microsoft-teams@master
#         if: always()
#         with:
#           webhook_url: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}

#   with_overwrite:
#     name: One with overwrite
#     runs-on: ubuntu-18.04
#     steps:
#       - uses: actions/checkout@master
#       - name: Microsoft Teams Notification
#         uses: skitionek/notify-microsoft-teams@master
#         if: always()
#         with:
#           webhook_url: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
#           overwrite: "{title: `Overwrote title in ${workflow_link}`}"

#   with_raw:
#     name: One with raw data
#     runs-on: ubuntu-18.04
#     steps:
#       - uses: actions/checkout@master
#       - name: Microsoft Teams Notification
#         uses: skitionek/notify-microsoft-teams@master
#         if: always()
#         with:
#           webhook_url: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
#           raw: >-
#             {
#               "@type": "MessageCard",
#               "@context": "http://schema.org/extensions",
#               "title": "No ${variables} avaliable in here"
#             }

#   if_failure:
#     name: Only if failure
#     runs-on: ubuntu-18.04
#     steps:
#       - uses: actions/checkout@master
#       - name: Microsoft Teams Notification
#         uses: skitionek/notify-microsoft-teams@master
#         if: failure()
#         with:
#           webhook_url: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}